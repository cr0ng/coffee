# jsp04

*
4. session
	==> 세션을 관리하는 내장 객체
	
		HttpSession 이라는 클래스를 이용해서 만들어진 내장객체
		
5. application
	==> 서버 전체를 관리하는 내장 객체
		
		ServletContext 라는 클래스를 이용해서 만들어진 내장 객체
		
6. page
	==> 그 문서 자체를 관리하는 내장 객체
		
		PageContext라는 클래스를 이용해서 만들어진 내장 객체
		
=================================================================================

내장 객체의 영역
==> 내장 객체를 이용하면 데이터를 보관하고 사용할 수 있다.
	즉, 서버 스스로가 필요한 데이터를 보관했다가 사용할 수 있다는 말이다.
	
	물론 자바적으로 변수에 기억해 놓았다가 사용해도 되지만
	==> 자바에서 변수로 만들게 되면
		거의 지역변수로 만들어지므로 
		같은 지역(문서)에서만 사용할 수 밖에 없는 문제점이 발생한다.
	좀더 다양한 문서에서 데이터를 공유할 수 있는 기능을 제공하고 있다.
	
	문제는 내장객체를 무엇을 사용해서 데이터를 기억했는가에 따라서
	그 데이터를 사용할 수 있는 영역이 달라진다.
	라는 것이고 이것은 우리는 내장 객체의 영역이라고 표현한다.
	
	예 ]
		request.setAttribute(); ==> 속성을 추가해주는 함수 ===> 요청객체에 속성을 추가
		==> 이렇게 데이터를 기억하면 
			이것은 요청이 유지되는 상태에서는 그 데이터를 사용할 수 있다.
			
		session.setAttribute(); ==> 세션객체에 속성을 추가
		==> 이렇게 데이터를 기억하면
			이것은 세션이 유지되는 상태에서는
			그 데이터를 사용할 수 있게된다.
			
			
	1) pageContext
		==>  같은 문서 안에서만 그 데이터를 사용할 수 있다.
			==> 이것은 거의 사용하지 않는다.
				왜?
					변수로 기억하는 것과 동일하기 때문에....
	
	*			
	2) request
		==> 요청이 유지되는 문서에서 그 데이터를 사용할 수 있다.
			<== forward 로 뷰를 부른경우
			
	***
	3) session
		==> 같은 세션을 유지한 문서에서 그 데이터를 사용할 수 있다.
		
	4) application
		==> 같은 서버를 사용하는 문서에서 그 데이터를 사용할 수 있다.
			웹 서버는 각각의 클라이언트에 독립적으로 응답하는 것이 일반적이다.
			즉, 다른 클라이언트의 요청과 상관없이
			그 클라이언트가 요청한 문제점을 해결하는 것이 일반적이다.
			굳이 모든 문서에서 동일한 데이터를 사용할 일은 거의 존재하지 않는다.
			
	참고 ]
		데이터를 입력하는 기능
			setAttribute("키값", 데이터);	==> 마치 Map 처럼 데이터를 입력하면 된다.
			
		데이터를 꺼내는 기능
			getAttribute("키값");			==> 마치 Map에서 get() 처럼 사용하면 된다.
			
=========================================================================================

액션태그
==> JSP는 HTML 언어를 기반으로해서
	필요한 위치에 자바적인 요소를 스크립트하는 방식으로
	만들어지는 언어이다.
	그러다보니
	HTML은 태그를 중심으로 제작되고
	자바 코드는 <% %>를 이용해서 처리하므로
	조금은 불편함이 있다.
	
	자주 사용하는 자바적인 기능을 HTML 처럼(태그방식) 사용할 수 있도록
	만들어 놓은 보조적인 명령을 말한다.
	
	1. forward 를 대신하는 액션태그
		
		형식 1 ]
			<jsp:forward page="대신응답할 문서이름" />
			==> 단순히 보여줄 페이지만 변경하는 것
			
		형식 2 ]
			<jsp:forward page="대신할응답문서">
				<jsp:param name="키값" value="데이터" scope="????" />
			</jsp:forward>
			==> 보여줄 페이지를 변경하면서 부가 정보를 알려준다.
			
		*
		참고 ]
			액션태그는 xhtml을 기반으로 제작된 태그이다.
			따라서
			몸체가 있는 태그
				<태그이름>
					내용
				</태그이름>
				
			몸체가 없는 태그
				<태그이름 />
				
		*
		2. 다른 문서를 포함시키는 기능을 가진 액션 태그
			( ==> <%@ include file="????" %> 과 비슷한 역할을 하는 태그이다. )
			
			형식 ]
				<jsp:include page="합칠문서이름" />
				
			주의 ]
				
				<%@ include file="???" %>
				==> 먼저 합치고 클래스를 만든다.
					따라서 합쳐졌을때 충돌나지 않도록 주의해야 한다.
					
				<jsp:include page="????" />
				==> 각각의 jsp 문서를 클래스로 만들어서 실행한 후
					실행 결과만 합치게 된다.
					따라서 따로 컴파일되므로 충돌날 염려가 없다.
					
========================================================================================

요청설계
==> 한 요청에 해당하는 정보를 기록하는 설계도와 같은 문서

형식 ]
	파일확장자 또는 작성 프로그램이 따로 있는 것이 아니고
	쉽게 작성할 수 있는 도구를 사용하면 된다.
	반드시 포함해야할 항목이 있다.
	
	작성형식 ]
		
		요청내용 : 요청주소
		파라미터 : 넘겨야할 데이터들...
		컨트롤러 : 자바에서 요청을 처리할 서블릿 클래스 경로
		뷰		 : 요청이 왔을 경우 보여줘야할 뷰 파일(JSP 파일) 경로
	
					
	
	
















