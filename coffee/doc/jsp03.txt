# jsp03

지시자
	page
	2. include
	taglib
	
2. include
	==> 다른 문서를 현재 파일에 포함시키는 기능을 가진 지시어
		다른 문서와 현재 문서를 하나의 문서로 만드는 기능.
		
		형식 ]
			<%@ include file="합칠파일이름" %>
			
		참고 ]
			우리가 웹 문서를 만들다보면 여러 페이지에 같은 내용이 중복되어서 들어가는 경우가
			더러 있다.
			
			하지만 원칙적으로 JSP 문서가 만든 결과를 응답하기 때문에
			(요청에 대해서 하나의 응답문서만 응답하므로)
			매 문서마다 동일한 내용이라도 다시 작성해야 한다.
			
			이런 불편함을 조금이나마 덜기 위한 방법으로 제시된 지시어이다.
			
		==> 
			자주 사용되는 내용은 따로 만들어 놓고
			응답 문서에 따로 만들어진 파일을 합쳐서 하나의 문서로
			만드는 방법
			
			
		주의 ]
			이 작업은 먼저 문서들을 합치고(하나의 문서로 만들고)
			컴파일을 한다.(==> .class 파일을 만든다.)
			만약 먼저 문서들을 하나로 합쳤을 때 문제 생기면
			(변수등이 충돌이 나면)
			에러가 발생한다는 것을 명심하세요...!
			
			정리 ]
				include 지시자로 두개의 문서를 하나의 문서로 합쳤을 경우
				두 문서에 똑같은 이름의 변수가 만들어질 경우
				하나의 클래스로 합쳐졌을때 이 변수들이 충돌이 날 수 있기 때문에
				주의 해야겠다.
				
---------------------------------------------------------------------------------
스크립트 방식
==> JSP는 HTML 언어가 기본이 되고 필요하면 자바 언어를
	필요한 위치에 삽입하여 같이 실행하는 문서이다.
	이 처럼 다른 언어에 포함하여 처리하는 방식을
	스크립트 방식이라고 하며
	JSP 문서에 자바 코드를 삽입하는 방식은 3가지가 있다.
	
	1. 스크립트 릿 방식
		==> 일반적인 자바 코드를 포함하는 방식을 의미한다.
			이곳에 기록한 모든 내용은 service 함수 안에 포함된다.
			따라서 이곳은 결국 지역적인 역할을 한다.
			
		참고 ]
			어차피 JSP 문서는 여러 문서가 같이 실행되는 것이 아니고
			클라이언트가 요청한 문서 하나만 실해되므로
			클래스가 연결되어서 실행되는 경우는 거의 없다.
			결론적으로 main 함수만 있으면 충분하게 그 역할을 한다.
			
		참고 ]
			JSP 문서는 실행을 하면 먼저 자바 클래스로 변환하고(.java 파일로 변환)
			그것을 컴파일해서 (==> .class 파일이 탄생...)
			실행되어진다.
			이런 클래스를 우리는 서블릿 클래스라고 부른다.
			이때 이것역시 자바의 main함수 처럼 시작함수가(진입점함수) 존재하는데
			그 역할을 service() 함수가 담당하고 있다.
			
		형식 ]
			<%
				자바코드 작성....
			%>
			
		참고 ]
			스크립트 릿 속에 있는 내용과 HTML 코드 내용은
			같이 service 함수에 코딩이 된다.
			따라서 두가지는 혼용해서 사용할 수 있다.
			다만 자바적인 요소와 HTML적인 요소만 구분해 주면 된다.
			
	2. 선언자 방식
		==> 스크립트 릿 방식에서 설명했듯이 JSP는 service() 함수 안에서 
			거의 모든것이 기술이 되고 실행이 된다.
			하지만 가끔은 전역변수나 함수를 만드는 방식이 선언자 방식이다.
			
			결론적으로 전역변수와 함수를 만드는 기능을 가진 스크립트 방식이다.
			( 이 안에은 일반적인 명령은 사용할 수 없다. )
			
			형식 ]
				
				<%!
					변수선언
					함수제작
				%>
	
	3. 표현자 방식
		==> System.out.println() 와 같이
			자바적인 요소(변수, 함수)를 화면에 내용을 출력하기 위한 스크립트이다.
			
		형식 ]
			<%= 출력내용 %>
			
		주의사항 ]
			출력내용은 오직 한개만 출력할 수 있다.
			이것은 System.out.println() 도 마찬가지이다.
			==> 문자열 결합을 이용해서 하나의 문자열로 만들어서
				출력하는 방식을 사용해야 한다.
	
				


















